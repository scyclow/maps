const setC=(r,e,t,n)=>{if(n){const o=n.useElevation?10*getElevation(r,e):dist(r,e,n.focalPoint.x,n.focalPoint.y)/dist(L,B,R,T),i=adjColor(hfix(hue(t)+map(o,0,1,0,n.hue)),saturation(t)+map(o,0,1,0,n.sat),brightness(t)+map(o,0,1,0,n.brt));stroke(i),fill(i)}else stroke(t),fill(t)},isBrightColor=r=>r>=90&&r<=150||r>=270&&r<=330;function adjColor(r,e,t){r=hfix(r);let n=0;return isBrightColor(r)&&(n=1-abs(120-r%180)/30),e=map(n,0,1,e,.65*e),color(r,e,t)}const noop=()=>{};function scaleModifier(r,e){const t=SCALE<.4&&SCALE>=.3?.05:SCALE<.3?.35-SCALE:0;return map(t,0,.15,r,e)}const coordToTuple=({x:r,y:e})=>[r,e];function findIntersectionPoint(r,e,t){if(!t.length)return!1;const n=coordToTuple(r),o=coordToTuple(e);return t.some(t=>{if(t.coords.length<10)return intersects(coordToTuple(r),coordToTuple(e),coordToTuple(t.coords[0]),coordToTuple(last(t.coords)));const i=t.coords.length<20?2:t.coords.length<40?4:t.coords.length<70?7:10;for(let r=0;r<t.coords.length;r+=i){const e=coordToTuple(t.coords[r]),a=coordToTuple(t.coords[r+i]||last(t.coords)),E=intersects(n,o,e,a);if(E)return E}return!1})}const createBorderFn=r=>(e,t)=>e<L+r+rnd(-BORDER_DRIFT,BORDER_DRIFT)||e>R-r+rnd(-BORDER_DRIFT,BORDER_DRIFT)||t<T+r+rnd(-BORDER_DRIFT,BORDER_DRIFT)||t>B-r+rnd(-BORDER_DRIFT,BORDER_DRIFT);function dotLine(r,e,t,n,o,i=noop,a=!1){const{d:E,angle:s}=lineStats(r,e,t,n);let R=r,c=e;for(let r=0;r<=E;r++){if(a&&r>=.6*E)return;i(R,c)||LOW_INK&&prb(.7)||TURBULENCE&&prb(.2)||o(R,c,r/E,s),[R,c]=getXYRotation(s,1,R,c)}}function dotRect(r,e,t,n,o){dotLine(r-t/2,e-n/2,r+t/2,e-n/2,o),dotLine(r-t/2,e+n/2,r+t/2,e+n/2,o),dotLine(r-t/2,e-n/2,r-t/2,e+n/2,o),dotLine(r+t/2,e-n/2,r+t/2,e+n/2,o)}function chance(...r){const e=r.reduce((r,e)=>r+e[0],0),t=rnd();let n=0;for(let o=0;o<r.length;o++)if(t<=(n+=r[o][0]/e))return r[o][1]}const lineStats=(r,e,t,n)=>({d:dist(r,e,t,n),angle:atan2(t-r,n-e)});function inPolygon(r,e){if(dist(r[0],r[1],e.x,e.y)>e.r)return!1;const t=[2*width,2*height];return e.coords.reduce((n,o,i)=>{const a=(i+1)%e.coords.length,E=e.coords[a];return intersects(r,t,o,E)?n+1:n},0)%2==1}function intersects([r,e],[t,n],[o,i],[a,E]){const s=(t-r)*(E-i)-(a-o)*(n-e);if(0===s)return!1;const R=((E-i)*(a-r)+(o-a)*(E-e))/s,c=((e-n)*(a-r)+(t-r)*(E-e))/s;return R>0&&R<1&&c>0&&c<1?[r+R*(t-r),e+R*(n-e)]:null}function getXYRotation(r,e,t=0,n=0){return[sin(r)*e+t,cos(r)*e+n]}function times(r,e){const t=[];for(let n=0;n<r;n++)t.push(e(n));return t}let __randomSeed=parseInt(tokenData.hash.slice(50,58),16);const rndint=(r,e)=>int(rnd(r,e));function rnd(r,e){__randomSeed^=__randomSeed<<13,__randomSeed^=__randomSeed>>17;const t=((__randomSeed^=__randomSeed<<5)<0?1+~__randomSeed:__randomSeed)%1e3/1e3;return null!=e?r+t*(e-r):null!=r?t*r:t}function hshrnd(r){const e=tokenData.hash.slice(2+2*r,4+2*r);return parseInt(e,16)/255}const prb=r=>rnd()<r,nsrnd=(r,e,t,n)=>t+noise(r/15,e/15)*(n-t)+rnd(-.25,.25),posOrNeg=()=>prb(.5)?1:-1,sample=r=>r[int(rnd(r.length))],exists=r=>!!r,last=r=>r[r.length-1],hfix=r=>(r%360+360)%360,luminance=r=>(299*red(r)+587*green(r)+114*blue(r))/1e3,contrast=(r,e)=>(luminance(r)-luminance(e))/255;function setLayers(){const{elevationAverage:r,elevationMin:e}=findAvgElevation(),t=rules(),n=rnd(360);LAYERS=[{ix:0,threshold:LAYER_N>=30?e:r,hideStreets:!1,...t[BASE_RULE](n,MAX_GRADIENT/rnd(3,15),0,LIGHTEN_DARKS)}];const o=["whiteAndBlack","paper"].includes(BASE_RULE),i=["bright","faded"].includes(BASE_RULE),a=5===COLOR_RULE&&i?sample(["bright","whiteAndBlack"]):!(5!==COLOR_RULE||!o)&&"bright";let E=0;const s=getHuePresets(n),R=(r,e,n)=>{const o=prb(.2)&&!MISPRINT_ROTATION,i=n===LAYER_N-1?MAX_GRADIENT/rnd(3,8):MAX_GRADIENT;let R;if(5!==COLOR_RULE||n%2)if(5===COLOR_RULE&&n%2){chance([1,20],[1,120],[1,180]);const e=hfix(r.baseHue+20);R=t[a](e,i,n,r.isDark)}else{const e=chance(...r.neighbors),o="blackAndWhite"===e||"whiteAndBlack"===e?r.baseHue:(r=>"path"===HUE_RULE?r+HUE_DIFF:s[E++%s.length])(r.baseHue);R=t[e](o,i,n,r.isDark)}else R=LAYERS[0];return{hideStreets:o,...R,ix:n,threshold:e}};for(let r=1;r<LAYER_N;r++){const e=LAYERS[r-1],t=r===LAYER_N-1?1:e.threshold+.02;LAYERS.push(R(e,t,r))}}const rules=()=>{const r=color(0,0,10),e=color(0,0,90),t=color(0,0,85),n=(r,e=360)=>rnd()<.09||r?{focalPoint:{x:rnd(L,R),y:rnd(T,B)},useElevation:rnd()<.9,hue:rnd(e/4,e)*posOrNeg(),sat:2,brt:1}:null;return{blackAndWhite:e=>{let n;return n=[2,4].includes(COLOR_RULE)?"light":3===COLOR_RULE?"dark":4===COLOR_RULE?"color":"all",{name:"blackAndWhite",baseHue:e,colors:{bg:r,primary:t,secondary:t,tertiary:t,quarternary:t,street:t,circle:t},neighbors:{contrast:[[1,"whiteAndBlack"],[1,"bright"]],light:[[8,"whiteAndBlack"],[2,"bright"]],dark:[[1,"neon"]],color:[[1,"bright"]],all:[[7,"whiteAndBlack"],[3,"bright"],[3,"neon"]]}[n],gradient:null,isDark:!0,isColor:!1,isLight:!1}},whiteAndBlack:t=>{let n;n=1===COLOR_RULE?"contrast":3===COLOR_RULE?"dark":[2,4].includes(COLOR_RULE)?"color":"all";const o={contrast:[[LAYER_N>3?1:0,"bright"],[3,"blackAndWhite"]],dark:[[5,"blackAndWhite"],[5,"neon"]],color:[[1,"bright"]],all:[[6,"blackAndWhite"],[5,"neon"],[5,"bright"]]}[n];return{name:"whiteAndBlack",baseHue:t,colors:{bg:e,primary:r,secondary:r,tertiary:r,quarternary:r,street:r,circle:r},neighbors:o,gradient:null,isDark:!1,isColor:!1,isLight:!0}},neon:(r,e,t,o)=>{const i=adjColor(r,30,o?22:12);let a,E=adjColor(r,55,92);return contrast(i,E)>-.5&&(E=setContrastC2(i,E,-.5)),{name:"neon",baseHue:r,colors:{bg:i,primary:E,secondary:E,tertiary:E,quarternary:E,street:E,circle:E},neighbors:{contrast:[[1,"bright"]],dark:[[2,"blackAndWhite"],[1,"neon"]],light:[[2,"whiteAndBlack"],[1,"bright"]],color:[[1,"bright"]],all:[[4,"bright"],[5,"blackAndWhite"],[3,"whiteAndBlack"],[2,"neon"]]}[a=2===LAYER_N?"color":1===COLOR_RULE?"contrast":2===COLOR_RULE?"light":3===COLOR_RULE?"dark":4===COLOR_RULE?"color":"all"],gradient:n(FORCE_GRADIENTS,e),isDark:!0,isColor:!1,isLight:!1}},bright:(r,e,t)=>{const o=INVERT_STREETS&&t,i=adjColor(r,55,95),a=o>0?invertStreetColor(r+180,50,85,i):color(hfix(r+180),30,15);let E;return E=1===COLOR_RULE?"contrast":2===COLOR_RULE?"light":3===COLOR_RULE?"dark":4===COLOR_RULE?"color":"all",{name:"bright",baseHue:r,colors:{bg:i,primary:a,secondary:a,tertiary:a,quarternary:a,street:a,circle:a},neighbors:{contrast:[[3,"blackAndWhite"],[LAYER_N>3?1:0,"whiteAndBlack"],[3,"neon"]],dark:[[2,"blackAndWhite"],[1,"neon"]],light:[[1,"whiteAndBlack"]],color:[[1,"bright"]],all:[[4,"blackAndWhite"],[2,"whiteAndBlack"],[1,"neon"]]}[E],invertStreets:o,gradient:n(FORCE_GRADIENTS,e),isDark:!1,isColor:!0,isLight:!1}},paper:(r,e)=>{const t=color(hfix(r),8,91),o=invertStreetColor(r+HUE_DIFF,60,30,t),i=invertStreetColor(r+HUE_DIFF-10,40,35,t),a=invertStreetColor(r+HUE_DIFF-20,40,35,t);let E;return E=2===COLOR_RULE?"light":3===COLOR_RULE?"dark":4===COLOR_RULE?"color":"all",{name:"paper",baseHue:r,colors:{bg:t,primary:o,secondary:o,tertiary:i,quarternary:i,street:a,circle:a},neighbors:{dark:[[1,"blackAndWhite"],[LAYER_N>2?1:0,"neon"],[1,"burnt"]],light:[[1,"whiteAndBlack"],[1,"bright"],[1,"faded"]],color:[[1,"bright"],[1,"faded"]],all:[[6,"blackAndWhite"],[LAYER_N>2?6:0,"neon"],[7,"burnt"],[1,"whiteAndBlack"],[1,"bright"],[2,"faded"]]}[E],gradient:n(!0,FORCE_GRADIENTS?e:rnd(90)),isDark:!1,isColor:!1,isLight:!0}},faded:(r,e)=>{const t=adjColor(r,35,95),o=invertStreetColor(r+HUE_DIFF,85,30,t),i=invertStreetColor(r+HUE_DIFF-10,85,30,t),a=invertStreetColor(r+HUE_DIFF-20,85,30,t);let E;return{name:"faded",baseHue:r,colors:{bg:t,primary:o,secondary:o,tertiary:i,quarternary:i,street:a,circle:a},neighbors:{dark:[[1,"blackAndWhite"],[1,"neon"],[2,"burnt"]],light:[[1,"whiteAndBlack"],[1,"bright"],[2,"paper"]],color:[[1,"bright"]],all:[[2,"burnt"],[2,"paper"],[12,"blackAndWhite"],[5,"neon"],[5,"whiteAndBlack"],[1,"bright"]]}[E=2===COLOR_RULE?"light":3===COLOR_RULE?"dark":4===COLOR_RULE?"color":"all"],gradient:n(FORCE_GRADIENTS,FORCE_GRADIENTS?e:rnd(75)),isDark:!1,isColor:!0,isLight:!1}},burnt:(r,e,t,o)=>{const i=color(hfix(r),35,o?17:15),a=HUE_DIFF>0?1:-1,E=color(hfix(r+HUE_DIFF),50,85),s=color(hfix(r+HUE_DIFF-30*a),50,85),R=color(hfix(r+HUE_DIFF-60*a),50,85);let c;return{name:"burnt",baseHue:r,colors:{bg:i,primary:E,secondary:E,tertiary:s,quarternary:s,street:R,circle:R},neighbors:{dark:[[3,"blackAndWhite"],[2,"neon"]],light:[[2,"whiteAndBlack"],[1,"bright"],[2,"faded"]],color:[[1,"bright"],[2,"faded"]],all:[[6,"whiteAndBlack"],[4,"faded"],[8,"blackAndWhite"],[4,"neon"],[7,"bright"]]}[c=2===LAYER_N?"color":2===COLOR_RULE?"light":3===COLOR_RULE?"dark":4===COLOR_RULE?"color":"all"],gradient:n(FORCE_GRADIENTS,e),isDark:!0,isColor:!1,isLight:!1}}}};function invertStreetColor(r,e,t,n){const o=hfix(r),i=isBrightColor(hue)?.9:.7;return setContrastC2(n,color(o,e,t),i)}function hideStreetsOverride(r){return SCALE>=1&&TURBULENCE&&r<LAYER_N-1&&r>0}function findActiveLayer(r,e){const t=getElevation(r,e);for(let r=0;r<LAYERS.length;r++)if(t<LAYERS[r].threshold)return LAYERS[r];return LAYERS[LAYERS.length-1]}function getHuePresets(r){switch(abs(HUE_DIFF)){case 0:return[r];case 10:return[r,r+10,r+20,r+30,r+40,r+50,r+60];case 20:return[r,r+20,r-20];case 100:return[r,r+120,r+180];case 120:return[r,r+120,r-120];case 150:return[r,r+150,r+210];case 180:return[r,r+180]}}function findAvgElevation(){let r=0,e=0,t=1,n=0;const o=30/SCALE;for(let i=L;i<R;i+=o)for(let a=T;a<B;a+=o){const o=getElevation(i,a);r+=o,o<t&&(t=o),o>n&&(n=o),e++}return{elevationAverage:r/e,elevationMin:t,elevationMax:n}}function getElevation(r,e){return noise(r/NOISE_DIVISOR+NOISE_OFFSET,e/NOISE_DIVISOR+NOISE_OFFSET)}const setContrast=(r,e,t=.4)=>{if(_contrast=contrast(r,e),_contrast<0){const n=(t+_contrast)/.3;return{c1:color(hue(r),saturation(r)+20*n,brightness(r)-30*n),c2:e}}{const n=(t-_contrast)/.3;return{c2:color(hue(e),saturation(e)+20*n,brightness(e)-30*n),c1:r}}},setContrastC2=(r,e,t=.4)=>{const n=(t-contrast(r,e))/.3;return color(hue(e),saturation(e)+20*n,brightness(e)-30*n)};function drawBackground(r,e,t,n){push();const o=LAYERS[0];background(o.colors.bg);const i=createBorderFn(BORDER_PADDING),a=2/SCALE,E=LAYERS.map((r,e)=>{const t=r.isColor&&o.isDark,n=r.isLight&&o.isDark,i=o.isColor&&r.isDark,a=t||i,E=o.isLight&&r.isDark,s=0===e||e===LAYERS.length-1;return{potentialMismatch:a||E,multiplier:s&